# 필요한 라이브러리 설치 및 임포트
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression

# 파일 경로 설정
file_path = '/content/3855500-1.csv'

# 데이터 읽기
df = pd.read_csv(file_path)

df['DATE'] = pd.to_datetime(df['DATE'], errors='coerce')

# 계절 정보 추가 함수
def get_season(month):
    if month in [12, 1, 2]:
        return 'Winter'
    elif month in [3, 4, 5]:
        return 'Spring'
    elif month in [6, 7, 8]:
        return 'Summer'
    elif month in [9, 10, 11]:
        return 'Autumn'

# 계절 정보 추가
df['Season'] = df['DATE'].dt.month.apply(get_season)

# 계절별 데이터 분리
winter_data = df[df['Season'] == 'Winter']
spring_data = df[df['Season'] == 'Spring']
summer_data = df[df['Season'] == 'Summer']
autumn_data = df[df['Season'] == 'Autumn']

# 결과를 개별 CSV로 저장
winter_data.to_csv('winter_data.csv', index=False)
spring_data.to_csv('spring_data.csv', index=False)
summer_data.to_csv('summer_data.csv', index=False)
autumn_data.to_csv('autumn_data.csv', index=False)

print("계절별 데이터가 분리되고 저장되었습니다.")

# 파일 이름 리스트
files = {
    'Winter': 'winter_data.csv',
    'Spring': 'spring_data.csv',
    'Summer': 'summer_data.csv',
    'Autumn': 'autumn_data.csv'
}

# 계절별 데이터 처리 및 시각화
for season, file_name in files.items():
    # 데이터 읽기
    df = pd.read_csv(file_name)

    # 'DATE' 열을 datetime 형식으로 변환
    df['DATE'] = pd.to_datetime(df['DATE'], errors='coerce')

    # 그래프 그리기
    plt.figure(figsize=(10, 6))

    # 점의 크기를 가장 작게 설정하고 선으로 이어주기
    plt.plot(df['DATE'], df['TAVG'], marker='o', color='blue', markersize=2, label='Data Points and Line')

    # 추세선 추가
    if len(df) > 1:  # 데이터가 충분히 있을 경우 추세선 그리기
        x = np.arange(len(df))
        y = df['TAVG']
        coefficients = np.polyfit(x, y, deg=1)
        trend = np.poly1d(coefficients)
        plt.plot(df['DATE'], trend(x), color='red', linestyle='--', label='Trend Line')

    # 그래프 레이블 및 제목
    plt.title(f'{season} Data and Trend Line')
    plt.xlabel('Date')
    plt.ylabel('TAVG')
    plt.legend()
    plt.grid()

    # 그래프 저장
    plt.savefig(f'{season}_graph.png')

    # 그래프 출력
    plt.show()

print("계절별 그래프와 추세선이 저장되었습니다.")
